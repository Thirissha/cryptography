#include <stdio.h>
#include <string.h>
#include <ctype.h>

// Function to encrypt the plaintext using the Vigen√®re cipher
void vigenereEncrypt(char plaintext[], char keyword[], char ciphertext[]) {
    int i, j = 0, keyLength = strlen(keyword);
    
    for (i = 0; plaintext[i] != '\0'; i++) {
        if (isalpha(plaintext[i])) {
            char shift = toupper(keyword[j % keyLength]) - 'A';
            if (isupper(plaintext[i])) {
                ciphertext[i] = 'A' + (plaintext[i] - 'A' + shift) % 26;
            } else {
                ciphertext[i] = 'a' + (plaintext[i] - 'a' + shift) % 26;
            }
            j++;
        } else {
            ciphertext[i] = plaintext[i];  // Non-alphabetic characters are unchanged
        }
    }
    ciphertext[i] = '\0';  // Null-terminate the ciphertext
}

int main() {
    char plaintext[100], keyword[100], ciphertext[100];

    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';  // Remove newline character

    printf("Enter keyword: ");
    fgets(keyword, sizeof(keyword), stdin);
    keyword[strcspn(keyword, "\n")] = '\0';  // Remove newline character

    // Encrypt the plaintext using the keyword
    vigenereEncrypt(plaintext, keyword, ciphertext);

    printf("Ciphertext: %s\n", ciphertext);

    return 0;
}
